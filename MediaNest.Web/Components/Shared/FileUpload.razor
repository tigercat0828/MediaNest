<div class="input-group">
    <InputFile OnChange="SelectFiles" class="form-control" multiple />
    @if (isReadyToUpload) {
        <button class="btn btn-primary" @onclick="UploadFile">上傳</button>
    }
    else {
        <button class="btn btn-primary" @onclick="UploadFile" disabled>上傳</button>
    }
</div>

<div class="card card-body">
    <div style="color:@(isUploadFinish ? "green" : "cadetblue")">
        @message
    </div>
    @* file waiting to be uplading list here *@
    @if (browserFiles.Count() > 0) {
        <ol >
            @foreach (var file in browserFiles) {
                <li>@file.Name</li>
            }
        </ol>
    }
</div>


@code {
    [Parameter] public string SaveDirectory { get; set; } = string.Empty;
    [Parameter] public string SaveSubFolder { get; set; } = string.Empty;
    [Parameter] public EventCallback<bool> OnUploadButtonPressed { get; set; }
    protected bool isUploadFinish = false;
    protected bool isReadyToUpload = false;
    protected string message = "";
    protected List<IBrowserFile> browserFiles = [];

    protected void SelectFiles(InputFileChangeEventArgs e) {
        message = "";
        browserFiles.Clear();

        browserFiles = [.. e.GetMultipleFiles(maximumFileCount: 1000)];
        if (browserFiles.Count > 0) {
            isReadyToUpload = true;
        }
    }
    protected virtual async Task UploadFile() {
        if (string.IsNullOrEmpty(SaveDirectory)) {
            return;
        }

        isUploadFinish = false;
        message = "檔案上傳中...";
        var saveFolder = Path.Combine(SaveDirectory, SaveSubFolder);
        Directory.CreateDirectory(saveFolder);

        foreach (var file in browserFiles) {
            var filePath = Path.Combine(saveFolder, file.Name);
            await using FileStream fs = new(filePath, FileMode.Create);
            await file.OpenReadStream(maxAllowedSize: (long)(5 * 1024) * (long)(1024 * 1024)).CopyToAsync(fs); // 1 GB
        }
        isUploadFinish = true;
        isReadyToUpload = false;
        message = "上傳完成!!";
        browserFiles.Clear();
        await OnUploadButtonPressed.InvokeAsync(true);
    }
}