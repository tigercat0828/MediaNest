@page "/comic/create"
@page "/comic/edit/{id}"

<AuthorizeView Roles="Admin,User">
    <NotAuthorized>
        <div class="alert alert-info mt-2">
            Please <a href="/account/login">Login</a> first!
        </div>
    </NotAuthorized>

    <Authorized Context="auth">

        <EditForm Model="_currentComic" FormName="ComicForm">
            <DataAnnotationsValidator />
            <div class="container">
                <div class="input-group mb-3">
                    <span class="input-group-text">標題</span>
                    <InputText class="form-control" id="Title" @bind-value="_currentComic.Title" />
                </div>
                <div class="input-group mb-3">
                    <span class="input-group-text">副標</span>
                    <InputText class="form-control" id="SubTitle" @bind-value="_currentComic.SubTitle" />
                </div>
                <div class="input-group mb-3">
                    <span class="input-group-text">系列</span>
                    <InputText class="form-control" id="Series" @bind-value="_currentComic.Series" />
                </div>
                <div class="input-group mb-3">
                    <span class="input-group-text">作者</span>
                    <InputText class="form-control" id="Author" @bind-value="_currentComic.Author" />
                </div>
                <div class="input-group mb-3">
                    <span class="input-group-text">簡介</span>
                    <InputText class="form-control" id="Description" @bind-value="_currentComic.Description" />
                </div>
                <div class="input-group mb-3">
                    <span class="input-group-text">標籤</span>
                    <InputText class="form-control" id="Tags" @bind-value="_tagStr" />
                </div>
                <div class="input-group mb-3">
                    <span class="input-group-text">角色</span>
                    <InputText class="form-control" id="Tags" @bind-value="_characterStr" />
                </div>
                @if (!_isEditMode) {
                    <div class="mb-3">
                        <ComicFileUploader SaveDirectory="@directory" SaveSubFolder="@_currentComic.FolderName" OnUploadButtonPressed="HandleUploadButtonPressed" />
                    </div>
                }
                <div>
                    @if (_isUploadButtonPressed || _isEditMode) {
                        <button class="btn btn-success" @onclick="HandleUpsertGame">完成</button>
                    }
                </div>
            </div>
        </EditForm>
    </Authorized>
</AuthorizeView>

@code {
    // TODO : uploader with authentication
    [Inject] public ApiClient ApiClient { get; set; }
    [Inject] public NavigationManager Navigation { get; set; }
    [Inject] public AuthenticationStateProvider AuthProvider { get; set; }
    [Parameter] public string id { get; set; }

    private string directory = Path.Combine(AppState.AssetsFolder, "Comics");
    private bool _isEditMode = false;
    private Comic _currentComic = new();

    private string _tagStr = "";
    private string _characterStr = "";
    private string oldTitle = "";
    private bool _isUploadButtonPressed = false;

    protected override async Task OnInitializedAsync() {

        var authState = await AuthProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated ?? false) {

            _currentComic.Code = Utility.GenerateSixDigitCode();
            if (id != null) {
                _isEditMode = true;
                _currentComic = await ApiClient.GetAsync<Comic>($"/api/comic/{id}");
                _tagStr = string.Join(",", _currentComic.Tags);
                _characterStr = string.Join(",", _currentComic.Characters);
                oldTitle = _currentComic.Title;
            }
        }
    }

    private async Task HandleUpsertGame() {

        _currentComic.Tags = _tagStr.Split(",", StringSplitOptions.RemoveEmptyEntries).ToList();
        _currentComic.Characters = _characterStr.Split(",", StringSplitOptions.RemoveEmptyEntries).ToList();
        _currentComic.Uploader = ""; 
        if (_isEditMode) {
            string newFolderPath = Path.Combine(AppState.AssetsFolder, "Comics", _currentComic.FolderName);
            string oldFolderPath = Path.Combine(AppState.AssetsFolder, "Comics", $"{_currentComic.Code[..3]}\\[{_currentComic.Code}]{oldTitle}");
            if (oldFolderPath != newFolderPath) Directory.Move(oldFolderPath, newFolderPath);
            await ApiClient.PutAsync<Comic, Comic>($"/comic/{id}", _currentComic);
        }
        else {
            
            await ApiClient.PostAsync<Comic, Comic>("/api/comic", _currentComic);
        }
        Navigation.NavigateTo($"/comic/{_currentComic.Id}");
    }

    private void HandleUploadButtonPressed(bool isPressed) {
        // 當按鈕被按下時更新狀態
        _isUploadButtonPressed = isPressed;
    }
}
