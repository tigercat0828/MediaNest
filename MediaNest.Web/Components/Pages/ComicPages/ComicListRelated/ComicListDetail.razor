@page "/comiclist/{id}"
<AuthorizeView>
	<Authorized>
		<AuthorizeView Roles="Pending">
			<Authorized Context="visitor">
				<div class="container">
					<div class="alert alert-info mt-2">
						You have no permission. Please message the Administrator.
					</div>
				</div>
			</Authorized>
		</AuthorizeView>
		<AuthorizeView Roles="Admin,User">
			<Authorized Context="general">
				<div class="container">
					<div class="row">
						<div class="col-1 mb-4">
							<a href="/comiclist" class="btn btn-outline-success">Back</a>
						</div>
					</div>
					<div class="row">
						@if (_comics != null) {
							<div class="row d-flex flex-wrap">
								@foreach (var comic in _comics) {

									string link = $"/comic/{comic.Id}";
									string source = $"/Assets/Comics/{comic.FolderName}/001.jpg";
									<ImageCover Link="@link" Title="@comic.Title" Source="@source" />
								}
							</div>
						}
						else {
							<Spinner />
						}
					</div>
				</div>
				
			</Authorized>
		</AuthorizeView>
	</Authorized>
	<NotAuthorized>
		<div class="container">
			<div class="alert alert-info mt-2">
				Please <a href="/account/login">Login</a> first!
			</div>
		</div>
	</NotAuthorized>
</AuthorizeView>
@code {
	[Parameter] public string id { get; set; }
	[Inject] public ApiClient ApiClient { get; set; }
	[Inject] public AuthenticationStateProvider AuthProvider { get; set; }  // TODO : Authorization
	private List<Comic> _comics = [];
	private ComicList _comicLists;
	protected override async Task OnInitializedAsync() {

		var authState = await AuthProvider.GetAuthenticationStateAsync();
		if (authState.User.Identity?.IsAuthenticated ?? false) {
			_comicLists = await ApiClient.GetAsync<ComicList>($"/api/comiclist/{id}");
			foreach (var id in _comicLists.ComicIds) {

				var comic = await ApiClient.GetAsync<Comic>($"/api/comic/{id}");
				if (comic != null) _comics.Add(comic);
			}
		}
	}
}
