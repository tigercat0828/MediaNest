@page "/comiclist/{id}"
@using MediaNest.Shared.Entities
@using MediaNest.Web.Components.Pages.ComicPage
@using MediaNest.Web.Services

@rendermode InteractiveServer
@attribute [Authorize(Roles = "Admin,User")]

<div class="container">
	<div class="row">
		<div class="col-1 mb-4">
			<a href="/comiclist" class="btn btn-outline-success">Back</a>
		</div>
	</div>

	@if (_comicList != null) {
		<div class="row mb-4">
			<div class="col-10">
				<PageTitle>@_comicList.Title</PageTitle>
				<h3>@_comicList.Title</h3>
			</div>
			<div class="col-2 d-flex justify-content-end">
				<a class="btn btn-primary me-1" href="/comiclist/edit/@_comicList.Id">編輯</a>
				<button class="btn btn-danger me-1" @onclick="ShowDeleteButton">刪除</button>
				@if (_showDeleteButton) {
					<button class="btn btn-outline-danger me-1" @onclick="ConfirmDelete">V</button>
				}
			</div>
		</div>
		<div class="row mb-4">
			<div class="col-12">
				@foreach (var chars in _comicList.Tags) {
					<a href="/comiclist/search/@chars" class="badge bg-light text-dark me-1">@chars</a>
				}
			</div>
		</div>
	}
	<div class="row">
		@if (_comics != null) {
			<div class="row d-flex flex-wrap">
				@foreach (var comic in _comics) {
					string link = $"/comic/{comic.Id}";
					string source = $"/Assets/Comics/Thumbs/{comic.Folder}/001.jpg";
					<ComicCover Link="@link" Title="@comic.Title" Source="@source" />
				}
			</div>
		}
		else {
			<LoadingSpinner />
		}
	</div>
</div>

@code {
	[Parameter] public string Id { get; set; }
	@inject ComicService ComicService;
	@inject NavigationManager NavigationManager;
	private List<Comic> _comics = [];
	private ComicList _comicList;
	private bool _showDeleteButton = false;
	private void ShowDeleteButton() {
		_showDeleteButton = true;
	}
	private async Task ConfirmDelete() {
		await ComicService.DeleteList(Id);
		NavigationManager.NavigateTo("/comiclist");
	}
	protected override async Task OnInitializedAsync() {

		_comicList = await ComicService.GetListById(Id);
		foreach (var id in _comicList.ComicIds) {
			var comic = await ComicService.GetComicById(id);
			if (comic != null) _comics.Add(comic);
		}
	}

}
