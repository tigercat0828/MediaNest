                                                                                                                                                @page "/game/create"
@using MediaNest.Shared
@using MediaNest.Shared.Dtos
@using MediaNest.Shared.Entities
@rendermode InteractiveServer
<h3>GameCreate</h3>

<EditForm Model="newGame" OnValidSubmit="HandleCreateGame">
    <div class="container">
        <div class="row mb-3">
            <div class="col-md-6">
                <label>Title</label>
                <InputText class="form-control" @bind-Value="newGame.Title" />
                <ValidationMessage For="() => newGame.Title" />
            </div>
            <div class="col-md-6">
                <label>Developer</label>
                <InputText class="form-control" @bind-Value="newGame.Developer" />
                <ValidationMessage For="() => newGame.Developer" />
            </div>
            <div class="col-md-6">
                <label>Genre</label>
                <InputText class="form-control" @bind-Value="newGame.Genre" />
                <ValidationMessage For="() => newGame.Genre" />
            </div>
            <div class="col-md-6">
                <label>Year</label>
                <InputNumber class="form-control" @bind-Value="newGame.Year" />
                <ValidationMessage For="() => newGame.Year" />
            </div>
        </div>
        <button class="btn btn-primary" type="submit">Save</button>

    </div>
</EditForm>

@code {
    public Game newGame { get; set; } = new();
    [Inject]
    private ApiClient apiClient { get; set; }
    [Inject]
    private IToastService Toast { get; set; }
    [Inject]
    private NavigationManager Navigation { get; set; }

    async Task HandleCreateGame() {
        var result = await apiClient.PostAsync<BaseResponse<Game>, Game>("/api/game", newGame);
        if (result != null && result.IsSuccess) {
            Toast.ShowSuccess("Game created successfully");
            Navigation.NavigateTo("/game");
        }
    }
}
