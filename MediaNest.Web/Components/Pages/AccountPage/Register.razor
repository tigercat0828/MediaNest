@page "/account/register"

@using MediaNest.Web.AuthStateProvider
@using MediaNest.Web.Components.Layout
@using Microsoft.AspNetCore.Components.Authorization
@* @layout EmptyLayout *@

<div class="container mt-3 p-5">
    <EditForm Model="authRequest" FormName="Register" OnValidSubmit="HandleRegister">
        <DataAnnotationsValidator />
        <div class="form-group mt-2">
            <label for="username">Username</label>
            <InputText id="username" class="form-control" @bind-Value="authRequest.Username" />
            @Message
        </div>
        <div class="form-group mt-2">
            <label for="password">Password</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="authRequest.Password" />
        </div>
        <div class="form-group mt-2">
            <label for="repeat">Check Password</label>
            <InputText id="repeat" type="password" class="form-control" @bind-Value="repeatPassword" />
        </div>
        <button type="submit" class="btn btn-primary mt-2">Register</button>
    </EditForm>
</div>

@code {
    private AuthRequest authRequest = new AuthRequest();

    [Inject] public ApiClient ApiClient { get; set; }
    [Inject] public NavigationManager Navigation { get; set; }
    [Inject] public AuthenticationStateProvider AuthStateProvider { get; set; }
    private string Message = "";
    private string repeatPassword { get; set; }
    private async Task HandleRegister() {
        if (authRequest.Password != repeatPassword) {
            Message = "password not matched";
            return;
        }
        var result = await ApiClient.PostAsync<AuthResponse, AuthRequest>("api/account/register", authRequest);
        if (result != null && result.Token != null) {
            // Use CustomAuthenticationStateProvider to set the authentication state
            await ((CustomAuthStateProvider)AuthStateProvider).MarkUserAsAuthenticated(result);
            Navigation.NavigateTo("/");
        }
        else {
            Message = result.Message;
        }
    }
}
